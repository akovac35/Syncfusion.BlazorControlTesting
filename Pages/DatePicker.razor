@page "/datepicker"

<p>Clear button test:</p>
<SfDatePicker @bind-Value="ClarButtonTestValue" ShowClearButton="true" TValue="DateTime?"></SfDatePicker>

<br />

<p>ValueChanged event test:</p>
<EditForm EditContext="ValueChangedEditContext">
    <p>Wrapper date picker</p>
    <CustomDatePicker Value="ValueChangedModelInstance.Value" ValueChanged="ValueChanged"></CustomDatePicker>
    <p>SfDatePicker</p>
    <SfDatePicker Value="ValueChangedModelInstance.Value" ValueChanged="ValueChanged" TValue="DateTime?" ShowClearButton="true"></SfDatePicker>
</EditForm>



@code{
    [Inject]
    ILogger<DatePicker> Logger { get; set; }

    DateTime? ClarButtonTestValue { get; set; }

    EditContext ValueChangedEditContext { get; set; }
    ValueChangedModel ValueChangedModelInstance { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ValueChangedModelInstance = new();
        ValueChangedEditContext = new EditContext(ValueChangedModelInstance);
    }

    void ValueChanged(DateTime? value)
    {
        Logger.Here(l => l.LogInformation("{@0}", value));
        ValueChangedModelInstance.Value = value;
    }

    public class ValueChangedModel
    {
        protected DateTime? _value;
        public DateTime? Value
        {
            get
            {
                return _value;
            }
            set
            {
                LoggerHelper<ValueChangedModel>.Here(l => l.LogInformation("{@0}", value));
                _value = value;
            }
        }
    }
}
